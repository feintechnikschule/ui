{"version":3,"file":"ui.esm.js","sources":["../src/@types/core.ts","../src/utils/error.ts","../src/server/connection.ts","../src/utils/data.ts","../src/engine/dom.ts","../src/engine/compute.ts","../src/engine/compile.ts","../src/utils/lazy.ts","../src/core/directives/on.ts","../src/core/directives.ts","../src/engine/render.ts","../src/core/component.ts","../src/core/index.ts","../src/utils/reset.ts","../src/index.ts"],"sourcesContent":["export type Directives = Record<string, (props: DirectiveProps) => void>;\n\nexport interface DirectiveProps {\n    el: HTMLElement;\n    parts: string[];\n    data: DirectiveData;\n    node?: UINode;\n}\n\nexport type KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent;\n\nexport interface DirectiveData {\n    compute: (event?: Event) => any;\n    value: string;\n}\n\nexport interface UINode {\n    directives: Record<string, DirectiveData>;\n    el: HTMLElement;\n    type: UINodeType;\n}\n\nexport enum UINodeType {\n    NULL = -1,\n    STATIC = 0,\n    DYNAMIC = 1\n}\n\nexport interface LeafUIConfig {\n    el: HTMLElement;\n    data: Record<string, any>;\n    methods: string[];\n    id: string;\n    path: string;\n    requestMethod: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD';\n    component: string;\n}\n","export const error = (\n    err: string,\n    expression?: string,\n    el?: HTMLElement\n): void => {\n    let message = `LeafUI Error: \"${err}\"`;\n    if (expression) message += `\\n\\nExpression: \"${expression}\"`;\n    if (el) message += `\\nElement:`;\n    console.warn(message, el);\n};\n","import Dom from './../engine/dom';\nimport { error } from './../utils/error';\n\nexport default class Connection {\n    protected static headers: Record<string, string>;\n\n    public static connect(\n        type: string,\n        uiData: Record<string, any>,\n        dom: typeof Dom\n    ) {\n        const payload = {\n            type,\n            payload: {\n                params: [],\n                method: uiData.method,\n                methodArgs: uiData.methodArgs,\n                component: uiData.config.component,\n                data: uiData.config.data\n            }\n        };\n\n        return fetch(\n            `${window.location.href}?_leaf_ui_config=${JSON.stringify(\n                payload\n            )}`,\n            {\n                method: uiData.config.method,\n                // This enables \"cookies\".\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'text/html, application/xhtml+xml',\n                    'X-Leaf-UI': 'true',\n\n                    // set Custom Headers\n                    ...this.headers,\n\n                    // We'll set this explicitly to mitigate potential interference from ad-blockers/etc.\n                    Referer: window.location.href\n                }\n            }\n        ).then(async response => {\n            if (response.ok) {\n                response.text().then(response => {\n                    const data = JSON.parse(response);\n                    window._leafUIConfig.data = data.state;\n                    dom.diff(data.html, document.body!);\n                });\n            } else {\n                error(await response.text().then(res => res));\n            }\n        });\n    }\n\n    //    public sendMessage(message) {\n    //        // Forward the query string for the ajax requests.\n\n    //            .then(response => {\n    //                if (response.ok) {\n    //                    response.text().then(response => {\n    //                        if (this.isOutputFromDump(response)) {\n    //                            this.onError(message);\n    //                            this.showHtmlModal(response);\n    //                        } else {\n    //                            this.onMessage(\n    //                                message,\n    //                                JSON.parse(response)\n    //                            );\n    //                        }\n    //                    });\n    //                } else {\n    //                    if (\n    //                        this.onError(\n    //                            message,\n    //                            response.status,\n    //                            response\n    //                        ) === false\n    //                    )\n    //                        return;\n\n    //                    if (response.status === 419) {\n    //                        if (store.sessionHasExpired) return;\n\n    //                        store.sessionHasExpired = true;\n\n    //                        this.showExpiredMessage(\n    //                            response,\n    //                            message\n    //                        );\n    //                    } else {\n    //                        response.text().then(response => {\n    //                            this.showHtmlModal(response);\n    //                        });\n    //                    }\n    //                }\n    //            })\n    //            .catch(() => {\n    //                this.onError(message);\n    //            });\n    //    }\n}\n","import Component from './../core/component';\nimport { LeafUIConfig } from './../@types/core';\n\nexport const eventDirectivePrefixRE = (): RegExp => /on|@/gim;\nexport const rawDirectiveSplitRE = (): RegExp => /:|\\./gim;\n\nexport const hasDirectiveRE = (): RegExp => {\n    return new RegExp(\n        `(ui-|${Object.keys(DIRECTIVE_SHORTHANDS).join('|')})\\\\w+`,\n        'gim'\n    );\n};\n\nexport const expressionPropRE = (prop: string): RegExp => {\n    // Utilizes \\b (word boundary) for prop differentiation.\n    // Fails when next character is a \\w (Word).\n    return new RegExp(`\\\\b${prop}\\\\b`, 'gim');\n};\n\nexport enum DIRECTIVE_SHORTHANDS {\n    '@' = 'on',\n    ':' = 'bind'\n}\n\nexport function arraysMatch(a: any[], b: any[]) {\n    return (\n        Array.isArray(a) &&\n        Array.isArray(b) &&\n        a.length === b.length &&\n        a.every((val, index) => val === b[index])\n    );\n}\n\ndeclare global {\n    interface Window {\n        leafUI: {\n            rootEl?: HTMLElement;\n            component: Component;\n        };\n        _leafUIConfig: LeafUIConfig;\n    }\n\n    interface HTMLElement {\n        component: Component;\n        compile: () => void;\n    }\n}\n\nwindow.leafUI = window.leafUI || {};\n","import { initComponent } from './../core/component';\nimport { DIRECTIVE_SHORTHANDS, arraysMatch } from './../utils/data';\n\nexport default class Dom {\n    static diff(newNode: string, oldNode: HTMLElement): void {\n        Dom.diffElements(Dom.getBody(newNode, false), oldNode);\n    }\n\n    static diffElements(newNode: HTMLElement, oldNode: HTMLElement): void {\n        const newNodes = Array.prototype.slice.call(newNode.children);\n        const oldNodes = Array.prototype.slice.call(oldNode.children);\n\n        /**\n         * Get the type for a node\n         * @param  {Node}   node The node\n         * @return {String} The type\n         */\n        const getNodeType = (node: HTMLElement) => {\n            if (node.nodeType === 3) return 'text';\n            if (node.nodeType === 8) return 'comment';\n            return node.tagName.toLowerCase();\n        };\n\n        /**\n         * Get the content from a node\n         * @param  {Node}   node The node\n         * @return {String}      The type\n         */\n        const getNodeContent = (node: HTMLElement) => {\n            if (node.children && node.children.length > 0) return null;\n            return node.textContent;\n        };\n\n        // const diff = Dom.compareNodesAndReturnChanges(newDomBody, oldNode);\n\n        // If extra elements in DOM, remove them\n        let count = oldNodes.length - newNodes.length;\n        if (count > 0) {\n            for (; count > 0; count--) {\n                oldNodes[oldNodes.length - count].parentNode.removeChild(\n                    oldNodes[oldNodes.length - count]\n                );\n            }\n        }\n\n        // Diff each item in the newNodes\n        for (let index = 0; index < newNodes.length; index++) {\n            const node = newNodes[index];\n\n            if (!oldNodes[index]) {\n                const newNodeClone = node.cloneNode(true);\n                oldNode.appendChild(newNodeClone);\n                initComponent(newNodeClone);\n                return;\n            }\n\n            if (\n                arraysMatch(\n                    Object.keys(oldNodes[index]?.attributes) ?? [],\n                    Object.keys(node.attributes)\n                ) &&\n                arraysMatch(\n                    Object.values(oldNodes[index]?.attributes) ?? [],\n                    Object.values(node.attributes)\n                ) &&\n                oldNodes[index]?.innerHTML === node.innerHTML\n            ) {\n                continue;\n            }\n\n            const hasDirectivePrefix = Object.values(oldNodes[index].attributes)\n                .map((attr: any) => attr.name.startsWith('ui-'))\n                .includes(true);\n            const hasDirectiveShorthandPrefix = Object.keys(\n                DIRECTIVE_SHORTHANDS\n            ).some(shorthand =>\n                Object.values(oldNodes[index].attributes)\n                    .map((attr: any) => attr.name.startsWith(shorthand))\n                    .includes(true)\n            );\n\n            if (hasDirectivePrefix || hasDirectiveShorthandPrefix) {\n                oldNodes[index].innerHTML = node.innerHTML;\n\n                for (let j = 0; j < node.attributes.length; j++) {\n                    const attr = node.attributes[j];\n\n                    if (\n                        attr.name.startsWith('ui-') ||\n                        Object.keys(DIRECTIVE_SHORTHANDS).some(shorthand =>\n                            Object.values(oldNodes[index].attributes)\n                                .map((attr: any) =>\n                                    attr.name.startsWith(shorthand)\n                                )\n                                .includes(true)\n                        )\n                    ) {\n                        if (\n                            oldNodes[index].getAttribute(attr.name) !==\n                            attr.value\n                        ) {\n                            const newNodeClone = node.cloneNode(true);\n                            oldNodes[index].parentNode.replaceChild(\n                                newNodeClone,\n                                oldNodes[index]\n                            );\n                            initComponent(newNodeClone);\n                        }\n\n                        continue;\n                    }\n\n                    const newNodeClone = node.cloneNode(true);\n                    oldNodes[index].parentNode.replaceChild(\n                        newNodeClone,\n                        oldNodes[index]\n                    );\n                    initComponent(newNodeClone);\n                }\n                continue;\n            }\n\n            // If element is not the same type, replace it with new element\n            if (getNodeType(node) !== getNodeType(oldNodes[index])) {\n                const newNodeClone = node.cloneNode(true);\n                oldNodes[index].parentNode.replaceChild(\n                    newNodeClone,\n                    oldNodes[index]\n                );\n                initComponent(newNodeClone);\n                return;\n            }\n\n            // If content is different, update it\n            const templateContent = getNodeContent(node);\n            if (\n                templateContent &&\n                templateContent !== getNodeContent(oldNodes[index])\n            ) {\n                oldNodes[index].textContent = templateContent;\n            }\n\n            if (\n                oldNodes[index].children.length > 0 &&\n                node.children.length < 1\n            ) {\n                oldNodes[index].innerHTML = '';\n                continue;\n            }\n\n            if (\n                oldNodes[index].children.length < 1 &&\n                node.children.length > 0\n            ) {\n                const fragment = document.createDocumentFragment();\n                Dom.diff(node, fragment as any);\n                oldNodes[index].appendChild(fragment);\n                continue;\n            }\n\n            if (node.children.length > 0) {\n                console.log('diffing children', newNode, oldNode);\n                Dom.diffElements(node, oldNodes[index]);\n            }\n        }\n    }\n\n    static getBody(html: string, removeScripts: boolean = false): HTMLElement {\n        const parser = new DOMParser();\n        const dom = parser.parseFromString(html, 'text/html');\n\n        if (removeScripts === true) {\n            const scripts = dom.body.getElementsByTagName('script');\n\n            for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n            }\n        }\n\n        return dom.body;\n    }\n\n    static flattenDomIntoArray(node: HTMLElement): HTMLCollection {\n        return node.getElementsByTagName('*');\n    }\n\n    static compareNodesAndReturnChanges(\n        newNode: HTMLElement,\n        oldNode: HTMLElement\n    ): Record<string, Element | null>[] {\n        const newNodes = Dom.flattenDomIntoArray(newNode);\n        const oldNodes = Dom.flattenDomIntoArray(oldNode);\n        const changes = [];\n\n        for (let i = 0; i < newNodes.length; i++) {\n            if (newNodes[i] !== oldNodes[i]) {\n                if (newNodes[i].tagName !== oldNodes[i].tagName) {\n                    changes.push({\n                        oldNode: null,\n                        newNode: newNodes[i]\n                    });\n                } else {\n                    changes.push({\n                        oldNode: oldNodes[i],\n                        newNode: newNodes[i]\n                    });\n                }\n            }\n        }\n\n        return changes;\n    }\n}\n","import { error } from '../utils/error';\nimport Connection from './../server/connection';\nimport Dom from './dom';\n\nexport const compute = (\n    expression: string,\n    el?: HTMLElement,\n    refs: Record<string, HTMLElement> = {}\n): ((event?: Event) => any) => {\n    const specialPropertiesNames = ['$el', '$emit', '$event', '$refs', '$dom'];\n\n    // This \"revives\" a function from a string, only using the new Function syntax once during compilation.\n    // This is because raw function is ~50,000x faster than new Function\n    const computeFunction = new Function(\n        `return (${specialPropertiesNames.join(',')}) => {\n            const method = ${JSON.stringify(expression)}.split('(')[0];\n            const methodArgs = ${JSON.stringify(expression)}.substring(${JSON.stringify(expression)}.indexOf('(') + 1, ${JSON.stringify(expression)}.lastIndexOf(')'));\n\n            if (!window._leafUIConfig.methods.includes(method)) {\n                return error(new ReferenceError(method + ' is not defined'), method, $el);\n            }\n\n            (${\n                Connection.connect\n            })('callMethod', { method, methodArgs, config: window._leafUIConfig }, $dom);\n        }`\n    )();\n\n    const emit = (\n        name: string,\n        options?: CustomEventInit,\n        dispatchGlobal = true\n    ) => {\n        const event = new CustomEvent(name, options);\n        const target = dispatchGlobal ? window : el || window;\n\n        target.dispatchEvent(event);\n    };\n\n    return (event?: Event) => {\n        try {\n            return computeFunction(el, emit, event, refs, Dom);\n        } catch (err) {\n            error(err as string, expression, el);\n        }\n    };\n};\n","import { DirectiveData, UINode, UINodeType } from '../@types/core';\nimport { compute } from './compute';\nimport { DIRECTIVE_SHORTHANDS } from '../utils/data';\n\nexport const flattenElementChildren = (\n    rootElement: HTMLElement,\n    ignoreRootElement = false\n): HTMLElement[] => {\n    const collection: HTMLElement[] = [];\n\n    if (!ignoreRootElement) {\n        collection.push(rootElement);\n    }\n\n    for (const childElement of rootElement.children as any) {\n        if (childElement instanceof HTMLElement) {\n            collection.push(\n                ...flattenElementChildren(\n                    childElement,\n                    childElement.attributes.length === 0\n                )\n            );\n        }\n    }\n\n    return collection;\n};\n\nexport const collectRefs = (\n    element: HTMLElement | Document = document\n): Record<string, HTMLElement> => {\n    const refDirective = 'ui-ref';\n    const refElements: NodeListOf<HTMLElement> = element.querySelectorAll(\n        `[${refDirective}]`\n    );\n    const refs: Record<string, HTMLElement> = {};\n\n    refElements.forEach(refElement => {\n        const name = refElement.getAttribute(refDirective);\n\n        if (name) {\n            refs[name] = refElement;\n        }\n    });\n\n    return refs;\n};\n\nexport const initDirectives = (\n    el: HTMLElement\n): Record<string, DirectiveData> => {\n    const directives: Record<string, DirectiveData> = {};\n    const refs = collectRefs();\n\n    // @ts-ignore\n    for (const { name, value } of el.attributes) {\n        const hasDirectivePrefix = name.startsWith('ui-');\n        const hasDirectiveShorthandPrefix = Object.keys(\n            DIRECTIVE_SHORTHANDS\n        ).some(shorthand => name.startsWith(shorthand));\n\n        if (!(hasDirectivePrefix || hasDirectiveShorthandPrefix)) {\n            continue;\n        }\n\n        const directiveData = {\n            compute: compute(value, el, refs),\n            value\n        };\n\n        // Handle normal and shorthand directives=\n        const directiveName = hasDirectivePrefix\n            ? name.slice('ui-'.length)\n            : // @ts-ignore\n              `${DIRECTIVE_SHORTHANDS[name[0]]}:${name.slice(1)}`;\n\n        directives[directiveName.toLowerCase()] = directiveData;\n    }\n\n    return directives;\n};\n\nexport const createASTNode = (el: HTMLElement): UINode | undefined => {\n    const directives = initDirectives(el);\n    const hasDirectives = Object.keys(directives).length > 0;\n    const node = { el, directives, type: UINodeType.STATIC };\n\n    return hasDirectives ? node : undefined;\n};\n\nexport const compile = (\n    el: HTMLElement,\n    ignoreRootElement = false\n): UINode[] => {\n    const uiNodes: UINode[] = [];\n    const elements = flattenElementChildren(el, ignoreRootElement);\n\n    elements.forEach(element => {\n        const newASTNode = createASTNode(element);\n\n        if (newASTNode) {\n            uiNodes.push(newASTNode);\n        }\n    });\n\n    return uiNodes;\n};\n","/**\n * @author Aiden Bai <hello@aidenybai.com>\n * @package lucia\n */\n// Lazy allows us to delay render calls if the main thread is blocked\n// This is kind of like time slicing in React but less advanced\n// It's a generator function that yields after a certain amount of time\n// This allows the browser to render other things while the generator is running\n// It's a bit like a setTimeout but it's more accurate\n\nexport const lazy = (\n  threshold: number,\n  generatorFunction: () => Generator<undefined, void, unknown>,\n): (() => void) => {\n  const generator = generatorFunction();\n  return function next() {\n    const start = performance.now();\n    let task = null;\n    do {\n      task = generator.next();\n    } while (performance.now() - start < threshold && !task.done);\n\n    if (task.done) return;\n    setTimeout(next);\n  };\n};\n\nexport default lazy;\n","import { DirectiveProps, KeyedEvent } from './../../@types/core';\n\nexport const onDirective = ({ el, parts, data }: DirectiveProps): void => {\n    const options: Record<string, boolean> = {};\n    const globalScopeEventProps = ['outside', 'global'];\n    const eventProps = parts.slice(2);\n    const EVENT_REGISTERED_FLAG = `__on_${parts[1]}_registered`;\n\n    // @ts-expect-error: We're adding a custom property to the element\n    if (el[EVENT_REGISTERED_FLAG]) return;\n\n    const target = globalScopeEventProps.some(prop =>\n        String(eventProps).includes(prop)\n    )\n        ? window\n        : el;\n\n    const handler = (event: Event) => {        \n        if (eventProps.length > 0) {\n            if (\n                event instanceof KeyboardEvent &&\n                /\\d/gim.test(String(eventProps))\n            ) {\n                const whitelistedKeycodes: number[] = [];\n                eventProps.forEach(eventProp => {\n                    // @ts-expect-error: eventProp can be a string, but isNaN only accepts number\n                    if (!isNaN(eventProp)) {\n                        whitelistedKeycodes.push(Number(eventProp));\n                    }\n                });\n\n                if (!whitelistedKeycodes.includes(event.keyCode)) return;\n            }\n\n            // Parse event modifiers based on directive prop\n            if (eventProps.includes('prevent')) event.preventDefault();\n            if (eventProps.includes('stop')) event.stopPropagation();\n            if (eventProps.includes('self')) {\n                if (event.target !== el) return;\n            }\n            /* istanbul ignore next */\n            if (eventProps.includes('outside')) {\n                if (el.contains(event.target as Node)) return;\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return;\n            }\n\n            if (eventProps.includes('enter') || eventProps.includes('meta')) {\n                if ((event as KeyboardEvent).key === 'Enter') {\n                    data.compute(event);\n                }\n            }\n\n            if (\n                (eventProps.includes('ctrl') &&\n                    (event as KeyedEvent).ctrlKey) ||\n                (eventProps.includes('alt') && (event as KeyedEvent).altKey) ||\n                (eventProps.includes('shift') &&\n                    (event as KeyedEvent).shiftKey) ||\n                (eventProps.includes('left') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 0) ||\n                (eventProps.includes('middle') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 1) ||\n                (eventProps.includes('right') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 2)\n            ) {\n                data.compute(event);\n            }\n        } else {\n            data.compute(event);\n        }\n    };\n\n    options.once = eventProps.includes('once');\n    options.passive = eventProps.includes('passive');\n\n    target.addEventListener(parts[1], handler, options);\n\n    // @ts-expect-error: We're adding a custom property to the element\n    el[EVENT_REGISTERED_FLAG] = true;\n};\n","import { DirectiveProps, Directives } from './../@types/core';\n// import { bindDirective } from './directives/bind';\n// import { modelDirective } from './directives/model';\nimport { onDirective } from './directives/on';\n\nexport const directives: Directives = {\n    // BIND: bindDirective,\n    // MODEL: modelDirective,\n    ON: onDirective,\n};\n\nexport const renderDirective = (\n    props: DirectiveProps,\n    directives: Directives\n): void => {\n    directives[props.parts[0].toUpperCase()](props);\n};\n","import lazy from './../utils/lazy';\nimport { renderDirective } from './../core/directives';\nimport { rawDirectiveSplitRE } from './../utils/data';\nimport { Directives, UINode, UINodeType } from './../@types/core';\n\nconst render = (\n    uiNodes: UINode[],\n    directives: Directives,\n): void => {\n    const legalDirectiveNames = Object.keys(directives);\n    const LAZY_MODE_TIMEOUT = 25;\n\n    lazy(LAZY_MODE_TIMEOUT, function*() {\n        for (const node of uiNodes) {\n            if (node.type === UINodeType.NULL) continue;\n            const isStatic = node.type === UINodeType.STATIC;\n            if (isStatic) node.type = UINodeType.NULL;\n            yield;\n\n            if (!isStatic) continue;\n\n            for (const [directiveName, directiveData] of Object.entries(\n                node.directives\n            )) {\n                const rawDirectiveName = directiveName.split(\n                    rawDirectiveSplitRE()\n                )[0];\n\n                if (\n                    !legalDirectiveNames.includes(\n                        rawDirectiveName.toUpperCase()\n                    )\n                )\n                    continue;\n                yield;\n\n                // If affected, then push to render queue\n                if (isStatic) {\n                    const directiveProps = {\n                        el: node.el,\n                        parts: directiveName.split(rawDirectiveSplitRE()),\n                        data: directiveData,\n                        node,\n                    };\n\n                    renderDirective(directiveProps, directives);\n\n                    // [TODO] Remove this after testing\n                    delete node.directives[directiveName];\n                }\n            }\n        }\n    })();\n};\n\nexport default render;\n","import { UINode } from './../@types/core';\nimport { compile } from '../engine/compile';\nimport render from '../engine/render';\nimport { directives } from './directives';\n\nexport default class Component {\n    public uiNodes: UINode[] = [];\n\n    constructor() {\n        this.uiNodes = [];\n    }\n\n    public mount(el: HTMLElement | string) {\n        const rootEl =\n            el instanceof HTMLElement\n                ? el\n                : document.querySelector<HTMLElement>(el) || document.body;\n\n        this.uiNodes = compile(rootEl);\n        this.render();\n        rootEl['component'] = this;\n\n        window.leafUI = {\n            rootEl,\n            component: this\n        };\n\n        return this;\n    }\n\n    /**\n     * Force renders the DOM based on props\n     * @param {string[]=} props - Array of root level properties in state\n     * @returns {undefined}\n     */\n    public render() {\n        render(this.uiNodes, directives);\n    }\n}\n\nexport const initComponent = (element: Element) =>\n    new Component().mount(element as HTMLElement);\n","import Component from './component';\n\n/**\n * Initialize Your Leaf UI root component\n * @param {HTMLElement|Document} element - Root element to find uninitialized components\n */\nexport const init = (element: HTMLElement | Document = document): void => {\n    const leafUI = new Component();\n    const rootElement = element instanceof Document ? element.body : element;\n\n    leafUI.mount(rootElement);\n};\n","/**\n * @author Caleb Porzio\n * @package livewire/livewire\n */\nexport function monkeyPatchDomSetAttributeToAllowAtSymbols() {\n    // Because morphdom may add attributes to elements containing \"@\" symbols\n    // like in the case of an Alpine `@click` directive, we have to patch\n    // the standard Element.setAttribute method to allow this to work.\n    let original = Element.prototype.setAttribute;\n\n    let hostDiv = document.createElement('div');\n\n    Element.prototype.setAttribute = function newSetAttribute(name, value) {\n        if (!name.includes('@')) {\n            return original.call(this, name, value);\n        }\n\n        hostDiv.innerHTML = `<span ${name}=\"${value}\"></span>`;\n\n        let attr = (hostDiv.firstElementChild)!.getAttributeNode(name)!;\n\n        (hostDiv.firstElementChild)!.removeAttributeNode(attr);\n\n        this.setAttributeNode(attr);\n    };\n}\n","import { init } from './core';\nimport { monkeyPatchDomSetAttributeToAllowAtSymbols } from './utils/reset';\nexport * from './@types';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    monkeyPatchDomSetAttributeToAllowAtSymbols();\n    init();\n\n    document.querySelectorAll('[ui-lazy]').forEach(el => {\n        el.removeAttribute('ui-lazy');\n    });\n});\n"],"names":["UINodeType","error","err","expression","el","message","console","warn","Connection","connect","type","uiData","dom","payload","params","method","methodArgs","component","config","data","fetch","window","location","href","JSON","stringify","credentials","headers","Accept","Referer","then","response","ok","text","parse","_leafUIConfig","state","diff","html","document","body","res","rawDirectiveSplitRE","DIRECTIVE_SHORTHANDS","arraysMatch","a","b","Array","isArray","length","every","val","index","leafUI","Dom","newNode","oldNode","diffElements","getBody","newNodes","prototype","slice","call","children","oldNodes","getNodeType","node","nodeType","tagName","toLowerCase","getNodeContent","textContent","count","parentNode","removeChild","newNodeClone","cloneNode","appendChild","initComponent","Object","keys","attributes","values","innerHTML","hasDirectivePrefix","map","attr","name","startsWith","includes","hasDirectiveShorthandPrefix","some","shorthand","j","getAttribute","value","replaceChild","templateContent","fragment","createDocumentFragment","log","removeScripts","parser","DOMParser","parseFromString","scripts","getElementsByTagName","i","remove","flattenDomIntoArray","compareNodesAndReturnChanges","changes","push","compute","refs","specialPropertiesNames","computeFunction","Function","join","emit","options","dispatchGlobal","event","CustomEvent","target","dispatchEvent","flattenElementChildren","rootElement","ignoreRootElement","collection","childElement","HTMLElement","collectRefs","element","refDirective","refElements","querySelectorAll","forEach","refElement","initDirectives","directives","directiveData","directiveName","createASTNode","hasDirectives","STATIC","undefined","compile","uiNodes","elements","newASTNode","lazy","threshold","generatorFunction","generator","next","start","performance","now","task","done","setTimeout","onDirective","parts","globalScopeEventProps","eventProps","EVENT_REGISTERED_FLAG","prop","String","handler","KeyboardEvent","test","whitelistedKeycodes","eventProp","isNaN","Number","keyCode","preventDefault","stopPropagation","contains","offsetWidth","offsetHeight","key","ctrlKey","altKey","shiftKey","button","once","passive","addEventListener","ON","renderDirective","props","toUpperCase","render","legalDirectiveNames","LAZY_MODE_TIMEOUT","NULL","isStatic","entries","rawDirectiveName","split","directiveProps","Component","mount","rootEl","querySelector","init","Document","monkeyPatchDomSetAttributeToAllowAtSymbols","original","Element","setAttribute","hostDiv","createElement","newSetAttribute","firstElementChild","getAttributeNode","removeAttributeNode","setAttributeNode","removeAttribute"],"mappings":"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"}